# AI Question Generation Guidelines

## 1. JSON Structure
```json
{
  "testseries": {
    "title": "Test Series Title",
    "duration": 90
  },
  "questions": [
    {
      "text": "##### $E = mc^2$ inline math\n\n```python\n# Code example\nprint(\"Hello\")\n```\n\n| Header 1 | Header 2 |\n|----------|----------|\n| Cell 1   | Cell 2   |",
      "answer": "Correct answer",
      "options": [
        { "text": "Option 1" },
        { "text": "Option 2" },
        { "text": "Correct answer" },
        { "text": "Option 4" }
      ]
    }
  ]
}
```

## 2. Formatting Rules

### Question Structure
- Every question must start with `#####`
- Question title should be same as provided in picture, do not modify
- Use `\n` for line breaks in these cases:
  - Before and after code blocks
  - Before and after tables
  - Before and after images
  - Before and after blockquotes
  - Between distinct sections of a question

### Math Expressions
- Always use `$` for both inline and display math
- Example: `$E = mc^2$` or `$$\nE = mc^2\n$$`

### Code Blocks
- Use triple backticks with language specification
- Add `\n` before and after the code block

### Tables
- Use markdown table syntax
- Add `\n` before and after the table

## 3. Requirements

### Questions
- Must start with `#####` prefix
- Must use `$` for all math expressions, even single ones
- Must use `\n` for proper spacing around blocks

### Options
- One option must exactly match the "answer" field
- Support same markdown as question text

### Validation
- JSON must be valid
- Math expressions must be properly escaped

## 4. Example

```json
{
  "testseries": {
    "title": "Mathematics Test Series",
    "duration": 60
  },
  "questions": [
    {
      "text": "##### Find the roots of the equation $x^2 - 5x + 6 = 0$\n\n```python\n# Python code to find roots\nimport math\n\ndef find_roots(a, b, c):\n    d = b**2 - 4*a*c\n    root1 = (-b + math.sqrt(d)) / (2*a)\n    root2 = (-b - math.sqrt(d)) / (2*a)\n    return root1, root2\n```",
      "answer": "2 and 3",
      "options": [
        { "text": "1 and 6" },
        { "text": "2 and 3" },
        { "text": "-2 and -3" },
        { "text": "-1 and -6" }
      ]
    }
  ]
}
```